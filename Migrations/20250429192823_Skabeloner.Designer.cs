// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TANE.Skabelon.Api.Context;

#nullable disable

namespace TANE.Skabelon.Api.Migrations
{
    [DbContext(typeof(SkabelonDbContext))]
    [Migration("20250429192823_Skabeloner")]
    partial class Skabeloner
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TANE.Skabelon.Api.Models.DagSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aktiviteter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Måltider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overnatning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pris")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TurSkabelonModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurSkabelonModelId");

                    b.ToTable("DagSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("RejseplanSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RejseplanSkabelonModelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RejseplanSkabelonModelId");

                    b.ToTable("TurSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.DagSkabelonModel", b =>
                {
                    b.HasOne("TANE.Skabelon.Api.Models.TurSkabelonModel", null)
                        .WithMany("DagSkabeloner")
                        .HasForeignKey("TurSkabelonModelId");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.HasOne("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", null)
                        .WithMany("TurSkabeloner")
                        .HasForeignKey("RejseplanSkabelonModelId");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", b =>
                {
                    b.Navigation("TurSkabeloner");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.Navigation("DagSkabeloner");
                });
#pragma warning restore 612, 618
        }
    }
}
