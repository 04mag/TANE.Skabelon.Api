// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TANE.Skabelon.Api.Context;

#nullable disable

namespace TANE.Skabelon.Api.Migrations
{
    [DbContext(typeof(SkabelonDbContext))]
    [Migration("20250501081557_ini2")]
    partial class ini2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DagSkabelonModelTurSkabelonModel", b =>
                {
                    b.Property<int>("DagSkabelonerId")
                        .HasColumnType("int");

                    b.Property<int>("TurId")
                        .HasColumnType("int");

                    b.HasKey("DagSkabelonerId", "TurId");

                    b.HasIndex("TurId");

                    b.ToTable("DagSkabelonModelTurSkabelonModel");
                });

            modelBuilder.Entity("RejseplanSkabelonModelTurSkabelonModel", b =>
                {
                    b.Property<int>("RejseplanSkabelonerId")
                        .HasColumnType("int");

                    b.Property<int>("TurSkabelonerId")
                        .HasColumnType("int");

                    b.HasKey("RejseplanSkabelonerId", "TurSkabelonerId");

                    b.HasIndex("TurSkabelonerId");

                    b.ToTable("RejseplanSkabelonModelTurSkabelonModel");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.DagSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aktiviteter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Måltider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overnatning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pris")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("DagSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RejseplanSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TurSkabelon");
                });

            modelBuilder.Entity("DagSkabelonModelTurSkabelonModel", b =>
                {
                    b.HasOne("TANE.Skabelon.Api.Models.DagSkabelonModel", null)
                        .WithMany()
                        .HasForeignKey("DagSkabelonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TANE.Skabelon.Api.Models.TurSkabelonModel", null)
                        .WithMany()
                        .HasForeignKey("TurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RejseplanSkabelonModelTurSkabelonModel", b =>
                {
                    b.HasOne("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", null)
                        .WithMany()
                        .HasForeignKey("RejseplanSkabelonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TANE.Skabelon.Api.Models.TurSkabelonModel", null)
                        .WithMany()
                        .HasForeignKey("TurSkabelonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
