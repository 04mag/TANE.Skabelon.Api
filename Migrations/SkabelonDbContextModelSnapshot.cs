// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TANE.Skabelon.Api.Context;

#nullable disable

namespace TANE.Skabelon.Api.Migrations
{
    [DbContext(typeof(SkabelonDbContext))]
    partial class SkabelonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TANE.Skabelon.Api.Models.DagSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aktiviteter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Måltider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overnatning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pris")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TurSkabelonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TurSkabelonId");

                    b.ToTable("DagSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AntalDage")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RejseplanSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RejseplanSkabelonId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RejseplanSkabelonId");

                    b.ToTable("TurSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.DagSkabelonModel", b =>
                {
                    b.HasOne("TANE.Skabelon.Api.Models.TurSkabelonModel", "TurSkabelon")
                        .WithMany("DagSkabeloner")
                        .HasForeignKey("TurSkabelonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TurSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.HasOne("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", "RejseplanSkabelon")
                        .WithMany("TurSkabeloner")
                        .HasForeignKey("RejseplanSkabelonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RejseplanSkabelon");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.RejseplanSkabelonModel", b =>
                {
                    b.Navigation("TurSkabeloner");
                });

            modelBuilder.Entity("TANE.Skabelon.Api.Models.TurSkabelonModel", b =>
                {
                    b.Navigation("DagSkabeloner");
                });
#pragma warning restore 612, 618
        }
    }
}
